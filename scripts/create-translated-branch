#!/bin/bash

# Any copyright is dedicated to the Public Domain.
# http://creativecommons.org/publicdomain/zero/1.0/

set -eEu -o pipefail
shopt -s extdebug
IFS=$'\n\t'
trap 'onFailure $?' ERR

function onFailure() {
  echo "Unhandled script error $1 at ${BASH_SOURCE[0]}:${BASH_LINENO[0]}" >&2
  exit 1
}

BRANCH=`git rev-parse --abbrev-ref HEAD`
LANG_CODE=${1:-}
SHA=$(git rev-parse --short=7 HEAD)

if [ $BRANCH != 'master' ]; then
  echo "Branch must be 'master' to create a translated branch"
  exit 1
fi

# Check for uncommited changes
if [ ! -z "$(git status --porcelain)" ]; then
  echo "You have uncommited changes on your branch. Please commit them and try again"
  exit 1
fi

# Check param is a two-character string
if [[ -z $LANG_CODE || "${#LANG_CODE}" -ne "2" ]]; then
  echo "Pass a two-character language code to checkout e.g. \`create-translated-branch es\`"
  exit 1
fi

# Check folder exists
if [[ ! -d "translations/${LANG_CODE}" ]]; then
  echo "A folder translations/${LANG_CODE} does not exist"
  exit 1
fi

if [[ ! -f "translations/${LANG_CODE}/README.md" ||  ! -f "translations/${LANG_CODE}/SUMMARY.md" ]]; then
  echo "The folder translations/${LANG_CODE} must contain a README.md and SUMMARY.md file"
  exit 1
fi

# Switch to detached HEAD so we can go back to master afterwards
git checkout --detach

mkdir -p translated-branch/docs/.gitbook

# Copy gitbook assets across
cp -aRf docs/.gitbook/. translated-branch/docs/.gitbook

# Copy translated files across
cp -aRf translations/${LANG_CODE}/* translated-branch/docs/

# Copy LICENSE
cp -f LICENSE translated-branch/LICENSE

# Copy gitbook config file
cp -f .gitbook.yml translated-branch/.gitbook.yml

# Create README.md for translated branch
cat << 'EOF' > translated-branch/README.md
# Auto-generated translation branch

This branch contains translations of the `master` branch. To change the files
in this branch you must [add translations to the Crowdin project](https://Crowdin.com/project/mapeo-docs).
Once the translations are approved in Crowdin, Crowdin will generate a PR to
this repo. Once that PR is merged, this branch will be updated. Any changes to
this branch will be overwritten whenever there are new translations from Crowdin.
EOF

# Stage new files
git add .

# Commit changes
git commit -am "Deploy [${LANG_CODE}] translations from ${SHA}"

# Create new branch from the `translated-branch` folder
git subtree split --prefix translated-branch -b translations-$LANG_CODE

# Add an empty commit to force Gitbook to update
# (Gitbook does not update based on the first commit in the commit history)
git commit --allow-empty -m 'Force gitbook update'

# Switch back to master branch where we started
git checkout master

echo "Successfully created a translated branch \`translations-${LANG_CODE}\`"
echo "To deploy the branch to Github:"
echo "git push -f origin translations-$LANG_CODE:translations-$LANG_CODE"
